package data;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * @author Shira Elitzur
 * 
 * An instance of this class represent a food category ( such as Hot Drinks, Cold Drinks, Salads... )
 * 
 */
@Entity
@Table (name = "categories")
public class Category {


	/**
	 * The id of this category (auto generated by db)
	 */
	@Id @GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column( name = "Id", nullable=false)
	private int id;
	
	/**
	 * The title of this category
	 */
	@Column( name = "Title", nullable=false, length=30)
	private String title;
	
	/**
	 * The description of this category
	 */
	@Column( name = "description", nullable=false, length=250)
    private String description;
   	
	/**
	 * The items of this category
	 */
	@OneToMany(cascade=CascadeType.ALL)
	private List<Item> items;
	
	/**
	 * The meals of this category
	 */
	@OneToMany(cascade=CascadeType.ALL)
	private List<Meal> meals;
	
	/**
	 * The icon of this category
	 */
	private byte[] icon;

	/**
	 * The constructor of Category object sets its title as the given parameter
	 * @param title
	 */
	public Category( String title ) {
		this.setTitle(title);
	}
	
	/**
	 * Constructor without parameters - a must in JPA Entity
	 */
	public Category() {
		
	}
	
	/**
	 * Returns the id of this category
	 * @return the id of this category
	 */
	public int getId() {
		return id;
	}

	/**
	 * Sets id for this category
	 * @param id
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * Returns the title of this category
	 * @return the title of this category
	 */
	public String getTitle() {
		return title;
	}

	/**
	 * Sets title for this category
	 * @param title
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * Returns the items of this category
	 * @return the items of this category
	 */
	public List<Item> getItems() {
		return items;
	}

	/**
	 * Sets items list to this category
	 * @param items
	 */
	public void setItems(List<Item> items) {
		this.items = items;
	}

	/**
	 * Returns the meals of this category
	 * @return
	 */
	public List<Meal> getMeals() {
		return meals;
	}

	/**
	 * Sets meals list to this category
	 * @param meals
	 */
	public void setMeals(List<Meal> meals) {
		this.meals = meals;
	}
	
	/**
	 * Returns the icon of this category
	 * @return the icon of this category
	 */
	public byte[] getIcon() {
		return icon;
	}
	
	/**
	 * Sets the icon to this category
	 * @param icon
	 */
	public void setIcon(byte[] icon) {
		this.icon = icon;
	}
	
	/**
	 * Sets the description to this category
	 * @param description
	 */
    public void setDescription(String description) {
        this.description = description;
    }
    
	/**
	 * Returns the description of this category
	 * @return the description of this category
	 */
    public String getDescription() {
        return description;
    }

}
